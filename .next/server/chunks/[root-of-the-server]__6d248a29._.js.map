{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tushar/OneDrive/Desktop/crm_module/client/src/app/api/inventory/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { InventoryItem } from '@/types';\n\n// Mock database of inventory items\nconst mockInventoryItems: InventoryItem[] = [\n  {\n    id: '1',\n    name: 'Enterprise Software License',\n    sku: 'SW-ENT-001',\n    category: 'software',\n    description: 'Annual enterprise license for CRM software',\n    price: 1200,\n    quantity: 50,\n    reorderLevel: 10,\n    status: 'in_stock',\n    createdAt: '2023-05-15T10:30:00.000Z',\n    updatedAt: '2023-06-20T14:45:00.000Z',\n  },\n  {\n    id: '2',\n    name: 'Professional Services - Implementation',\n    sku: 'SVC-IMP-001',\n    category: 'service',\n    description: 'Professional implementation services (per hour)',\n    price: 150,\n    quantity: 200, // Hours available\n    reorderLevel: 40,\n    status: 'in_stock',\n    createdAt: '2023-05-10T09:15:00.000Z',\n    updatedAt: '2023-06-15T11:30:00.000Z',\n  },\n  {\n    id: '3',\n    name: 'Server Hardware - Basic',\n    sku: 'HW-SRV-001',\n    category: 'hardware',\n    description: 'Entry-level server for small businesses',\n    price: 2500,\n    quantity: 15,\n    reorderLevel: 5,\n    status: 'in_stock',\n    createdAt: '2023-04-20T13:45:00.000Z',\n    updatedAt: '2023-06-10T10:15:00.000Z',\n  },\n  {\n    id: '4',\n    name: 'Cloud Storage - 1TB',\n    sku: 'CLD-STR-001',\n    category: 'cloud',\n    description: '1TB cloud storage subscription (annual)',\n    price: 120,\n    quantity: 100,\n    reorderLevel: 20,\n    status: 'in_stock',\n    createdAt: '2023-05-05T11:20:00.000Z',\n    updatedAt: '2023-06-05T09:30:00.000Z',\n  },\n  {\n    id: '5',\n    name: 'Premium Support Package',\n    sku: 'SUP-PRM-001',\n    category: 'support',\n    description: '24/7 premium support package (annual)',\n    price: 5000,\n    quantity: 30,\n    reorderLevel: 5,\n    status: 'in_stock',\n    createdAt: '2023-04-15T14:30:00.000Z',\n    updatedAt: '2023-06-01T15:45:00.000Z',\n  },\n  {\n    id: '6',\n    name: 'Network Switch - 24 Port',\n    sku: 'HW-NSW-001',\n    category: 'hardware',\n    description: '24-port managed network switch',\n    price: 450,\n    quantity: 8,\n    reorderLevel: 5,\n    status: 'low_stock',\n    createdAt: '2023-05-25T10:15:00.000Z',\n    updatedAt: '2023-06-25T13:30:00.000Z',\n  },\n  {\n    id: '7',\n    name: 'Data Migration Service',\n    sku: 'SVC-MIG-001',\n    category: 'service',\n    description: 'Data migration service (per project)',\n    price: 3000,\n    quantity: 10, // Projects capacity\n    reorderLevel: 2,\n    status: 'in_stock',\n    createdAt: '2023-05-20T09:45:00.000Z',\n    updatedAt: '2023-06-22T11:15:00.000Z',\n  },\n  {\n    id: '8',\n    name: 'Wireless Access Point',\n    sku: 'HW-WAP-001',\n    category: 'hardware',\n    description: 'Enterprise-grade wireless access point',\n    price: 180,\n    quantity: 0,\n    reorderLevel: 5,\n    status: 'out_of_stock',\n    createdAt: '2023-04-25T13:20:00.000Z',\n    updatedAt: '2023-06-18T14:30:00.000Z',\n  },\n];\n\nexport async function GET(request: Request) {\n  // Get URL parameters for filtering and pagination\n  const { searchParams } = new URL(request.url);\n  const category = searchParams.get('category');\n  const status = searchParams.get('status');\n  const minPrice = searchParams.get('minPrice') ? parseInt(searchParams.get('minPrice') || '0') : null;\n  const maxPrice = searchParams.get('maxPrice') ? parseInt(searchParams.get('maxPrice') || '0') : null;\n  const page = parseInt(searchParams.get('page') || '1');\n  const limit = parseInt(searchParams.get('limit') || '10');\n\n  // Apply filters\n  let filteredItems = [...mockInventoryItems];\n  \n  if (category) {\n    filteredItems = filteredItems.filter(item => item.category === category);\n  }\n  \n  if (status) {\n    filteredItems = filteredItems.filter(item => item.status === status);\n  }\n  \n  if (minPrice !== null) {\n    filteredItems = filteredItems.filter(item => item.price >= minPrice);\n  }\n  \n  if (maxPrice !== null) {\n    filteredItems = filteredItems.filter(item => item.price <= maxPrice);\n  }\n\n  // Sort by name\n  filteredItems.sort((a, b) => a.name.localeCompare(b.name));\n\n  // Apply pagination\n  const startIndex = (page - 1) * limit;\n  const endIndex = page * limit;\n  const paginatedItems = filteredItems.slice(startIndex, endIndex);\n\n  // Prepare response with pagination metadata\n  const response = {\n    data: paginatedItems,\n    pagination: {\n      total: filteredItems.length,\n      page,\n      limit,\n      pages: Math.ceil(filteredItems.length / limit),\n    },\n  };\n\n  return NextResponse.json(response);\n}\n\nexport async function POST(request: Request) {\n  try {\n    const body = await request.json();\n    \n    // In a real application, you would validate and save the item to your database\n    // For now, we'll just return the item with a mock ID\n    const newItem: InventoryItem = {\n      id: Math.random().toString(36).substring(2, 9), // Generate a random ID\n      ...body,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n    };\n    \n    return NextResponse.json(newItem, { status: 201 });\n  } catch (error) {\n    return NextResponse.json(\n      { error: 'Failed to create inventory item' },\n      { status: 400 }\n    );\n  }\n}"],"names":[],"mappings":";;;;AAAA;;AAGA,mCAAmC;AACnC,MAAM,qBAAsC;IAC1C;QACE,IAAI;QACJ,MAAM;QACN,KAAK;QACL,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;QACV,cAAc;QACd,QAAQ;QACR,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,KAAK;QACL,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;QACV,cAAc;QACd,QAAQ;QACR,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,KAAK;QACL,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;QACV,cAAc;QACd,QAAQ;QACR,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,KAAK;QACL,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;QACV,cAAc;QACd,QAAQ;QACR,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,KAAK;QACL,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;QACV,cAAc;QACd,QAAQ;QACR,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,KAAK;QACL,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;QACV,cAAc;QACd,QAAQ;QACR,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,KAAK;QACL,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;QACV,cAAc;QACd,QAAQ;QACR,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,KAAK;QACL,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;QACV,cAAc;QACd,QAAQ;QACR,WAAW;QACX,WAAW;IACb;CACD;AAEM,eAAe,IAAI,OAAgB;IACxC,kDAAkD;IAClD,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC5C,MAAM,WAAW,aAAa,GAAG,CAAC;IAClC,MAAM,SAAS,aAAa,GAAG,CAAC;IAChC,MAAM,WAAW,aAAa,GAAG,CAAC,cAAc,SAAS,aAAa,GAAG,CAAC,eAAe,OAAO;IAChG,MAAM,WAAW,aAAa,GAAG,CAAC,cAAc,SAAS,aAAa,GAAG,CAAC,eAAe,OAAO;IAChG,MAAM,OAAO,SAAS,aAAa,GAAG,CAAC,WAAW;IAClD,MAAM,QAAQ,SAAS,aAAa,GAAG,CAAC,YAAY;IAEpD,gBAAgB;IAChB,IAAI,gBAAgB;WAAI;KAAmB;IAE3C,IAAI,UAAU;QACZ,gBAAgB,cAAc,MAAM,CAAC,CAAA,OAAQ,KAAK,QAAQ,KAAK;IACjE;IAEA,IAAI,QAAQ;QACV,gBAAgB,cAAc,MAAM,CAAC,CAAA,OAAQ,KAAK,MAAM,KAAK;IAC/D;IAEA,IAAI,aAAa,MAAM;QACrB,gBAAgB,cAAc,MAAM,CAAC,CAAA,OAAQ,KAAK,KAAK,IAAI;IAC7D;IAEA,IAAI,aAAa,MAAM;QACrB,gBAAgB,cAAc,MAAM,CAAC,CAAA,OAAQ,KAAK,KAAK,IAAI;IAC7D;IAEA,eAAe;IACf,cAAc,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI;IAExD,mBAAmB;IACnB,MAAM,aAAa,CAAC,OAAO,CAAC,IAAI;IAChC,MAAM,WAAW,OAAO;IACxB,MAAM,iBAAiB,cAAc,KAAK,CAAC,YAAY;IAEvD,4CAA4C;IAC5C,MAAM,WAAW;QACf,MAAM;QACN,YAAY;YACV,OAAO,cAAc,MAAM;YAC3B;YACA;YACA,OAAO,KAAK,IAAI,CAAC,cAAc,MAAM,GAAG;QAC1C;IACF;IAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,+EAA+E;QAC/E,qDAAqD;QACrD,MAAM,UAAyB;YAC7B,IAAI,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG;YAC5C,GAAG,IAAI;YACP,WAAW,IAAI,OAAO,WAAW;YACjC,WAAW,IAAI,OAAO,WAAW;QACnC;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS;YAAE,QAAQ;QAAI;IAClD,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAkC,GAC3C;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}