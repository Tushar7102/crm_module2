{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tushar/Downloads/crm_module2/src/lib/api-config.ts"],"sourcesContent":["/**\n * API Configuration\n * \n * This file centralizes API configuration and provides utility functions\n * for working with API endpoints.\n */\n\n// Base API URL from environment variables\nexport const API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3000/api';\n\n// API Endpoints\nexport const API_ENDPOINTS = {\n  // Auth endpoints\n  AUTH: {\n    LOGIN: `${API_URL}/auth/login`,\n    REGISTER: `${API_URL}/auth/register`,\n    PROFILE: `${API_URL}/auth/profile`,\n    CHANGE_PASSWORD: `${API_URL}/auth/change-password`,\n  },\n  \n  // Lead endpoints\n  LEADS: {\n    BASE: `${API_URL}/leads`,\n    DETAIL: (id: string) => `${API_URL}/leads/${id}`,\n    STATUS: (id: string) => `${API_URL}/leads/${id}/status`,\n    ASSIGN: (id: string) => `${API_URL}/leads/${id}/assign`,\n    STATS: `${API_URL}/leads/stats`,\n  },\n  \n  // Opportunity endpoints\n  OPPORTUNITIES: {\n    BASE: `${API_URL}/opportunities`,\n    DETAIL: (id: string) => `${API_URL}/opportunities/${id}`,\n    STATUS: (id: string) => `${API_URL}/opportunities/${id}/status`,\n    ASSIGN: (id: string) => `${API_URL}/opportunities/${id}/assign`,\n    STATS: `${API_URL}/opportunities/stats`,\n  },\n  \n  // Service ticket endpoints\n  SERVICE_TICKETS: {\n    BASE: `${API_URL}/service-tickets`,\n    DETAIL: (id: string) => `${API_URL}/service-tickets/${id}`,\n    STATUS: (id: string) => `${API_URL}/service-tickets/${id}/status`,\n    ASSIGN: (id: string) => `${API_URL}/service-tickets/${id}/assign`,\n  },\n  \n  // User endpoints\n  USERS: {\n    BASE: `${API_URL}/users`,\n    DETAIL: (id: string) => `${API_URL}/users/${id}`,\n  },\n  \n  // Health check endpoint\n  HEALTH: `${API_URL}/health`,\n};\n\n/**\n * Get authorization headers with the provided token\n */\nexport const getAuthHeaders = (token: string) => ({\n  'Authorization': `Bearer ${token}`,\n  'Content-Type': 'application/json',\n});\n\n/**\n * Default headers for API requests\n */\nexport const DEFAULT_HEADERS = {\n  'Content-Type': 'application/json',\n};\n\nexport default {\n  API_URL,\n  API_ENDPOINTS,\n  getAuthHeaders,\n  DEFAULT_HEADERS,\n};"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED,0CAA0C;;;;;;;;AACnC,MAAM,UAAU,gFAAmC;AAGnD,MAAM,gBAAgB;IAC3B,iBAAiB;IACjB,MAAM;QACJ,OAAO,GAAG,QAAQ,WAAW,CAAC;QAC9B,UAAU,GAAG,QAAQ,cAAc,CAAC;QACpC,SAAS,GAAG,QAAQ,aAAa,CAAC;QAClC,iBAAiB,GAAG,QAAQ,qBAAqB,CAAC;IACpD;IAEA,iBAAiB;IACjB,OAAO;QACL,MAAM,GAAG,QAAQ,MAAM,CAAC;QACxB,QAAQ,CAAC,KAAe,GAAG,QAAQ,OAAO,EAAE,IAAI;QAChD,QAAQ,CAAC,KAAe,GAAG,QAAQ,OAAO,EAAE,GAAG,OAAO,CAAC;QACvD,QAAQ,CAAC,KAAe,GAAG,QAAQ,OAAO,EAAE,GAAG,OAAO,CAAC;QACvD,OAAO,GAAG,QAAQ,YAAY,CAAC;IACjC;IAEA,wBAAwB;IACxB,eAAe;QACb,MAAM,GAAG,QAAQ,cAAc,CAAC;QAChC,QAAQ,CAAC,KAAe,GAAG,QAAQ,eAAe,EAAE,IAAI;QACxD,QAAQ,CAAC,KAAe,GAAG,QAAQ,eAAe,EAAE,GAAG,OAAO,CAAC;QAC/D,QAAQ,CAAC,KAAe,GAAG,QAAQ,eAAe,EAAE,GAAG,OAAO,CAAC;QAC/D,OAAO,GAAG,QAAQ,oBAAoB,CAAC;IACzC;IAEA,2BAA2B;IAC3B,iBAAiB;QACf,MAAM,GAAG,QAAQ,gBAAgB,CAAC;QAClC,QAAQ,CAAC,KAAe,GAAG,QAAQ,iBAAiB,EAAE,IAAI;QAC1D,QAAQ,CAAC,KAAe,GAAG,QAAQ,iBAAiB,EAAE,GAAG,OAAO,CAAC;QACjE,QAAQ,CAAC,KAAe,GAAG,QAAQ,iBAAiB,EAAE,GAAG,OAAO,CAAC;IACnE;IAEA,iBAAiB;IACjB,OAAO;QACL,MAAM,GAAG,QAAQ,MAAM,CAAC;QACxB,QAAQ,CAAC,KAAe,GAAG,QAAQ,OAAO,EAAE,IAAI;IAClD;IAEA,wBAAwB;IACxB,QAAQ,GAAG,QAAQ,OAAO,CAAC;AAC7B;AAKO,MAAM,iBAAiB,CAAC,QAAkB,CAAC;QAChD,iBAAiB,CAAC,OAAO,EAAE,OAAO;QAClC,gBAAgB;IAClB,CAAC;AAKM,MAAM,kBAAkB;IAC7B,gBAAgB;AAClB;uCAEe;IACb;IACA;IACA;IACA;AACF","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tushar/Downloads/crm_module2/src/services/auth-service.ts"],"sourcesContent":["import { toast } from 'sonner';\nimport { API_URL, API_ENDPOINTS, getAuthHeaders } from '@/lib/api-config';\n\n// Types for authentication\nexport interface User {\n  id: string;\n  name: string;\n  email: string;\n  role: string;\n  department?: string;\n  avatar?: string;\n}\n\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterData {\n  name: string;\n  email: string;\n  password: string;\n  role: string;\n  department: string;\n  phone: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n}\n\n// API URL is now imported from api-config.ts\n\n/**\n * Service for handling authentication related API calls\n */\nexport const AuthService = {\n  /**\n   * Login a user with email and password\n   */\n  login: async (credentials: LoginCredentials): Promise<AuthResponse> => {\n    try {\n      const response = await fetch(API_ENDPOINTS.AUTH.LOGIN, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credentials),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.msg || errorData.message || 'Login failed');\n      }\n\n      const data = await response.json();\n      \n      // Store token in localStorage\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      \n      // Also set token in cookie for middleware authentication\n      document.cookie = `auth-token=${data.token}; path=/; max-age=86400; SameSite=Strict`;\n      \n      return data;\n    } catch (error) {\n      console.error('Login error:', error);\n      toast.error(error instanceof Error ? error.message : 'Login failed');\n      throw error;\n    }\n  },\n\n  /**\n   * Register a new user\n   */\n  register: async (userData: RegisterData): Promise<AuthResponse> => {\n    try {\n      console.log('Sending registration data:', userData);\n      const response = await fetch(API_ENDPOINTS.AUTH.REGISTER, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Server response error:', errorData);\n        throw new Error(errorData.msg || errorData.message || 'Registration failed');\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      toast.error(error instanceof Error ? error.message : 'Registration failed');\n      throw error;\n    }\n  },\n\n  /**\n   * Logout the current user\n   */\n  logout: (): void => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    // Remove the auth token cookie\n    document.cookie = 'auth-token=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT; SameSite=Strict';\n    // Optionally call the backend to invalidate the token\n  },\n\n  /**\n   * Get the current authenticated user\n   */\n  getCurrentUser: (): User | null => {\n    const userStr = localStorage.getItem('user');\n    if (!userStr) return null;\n    \n    try {\n      return JSON.parse(userStr) as User;\n    } catch (error) {\n      console.error('Error parsing user data:', error);\n      return null;\n    }\n  },\n\n  /**\n   * Check if a user is authenticated\n   */\n  isAuthenticated: (): boolean => {\n    return !!localStorage.getItem('token');\n  },\n\n  /**\n   * Get the authentication token\n   */\n  getToken: (): string | null => {\n    return localStorage.getItem('token');\n  },\n\n  /**\n   * Update user profile\n   */\n  updateProfile: async (userData: Partial<User>): Promise<User> => {\n    try {\n      const token = AuthService.getToken();\n      if (!token) throw new Error('Not authenticated');\n\n      const response = await fetch(API_ENDPOINTS.AUTH.PROFILE, {\n        method: 'PUT',\n        headers: getAuthHeaders(token),\n        body: JSON.stringify(userData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Profile update failed');\n      }\n\n      const data = await response.json();\n      \n      // Update stored user data\n      const currentUser = AuthService.getCurrentUser();\n      if (currentUser) {\n        const updatedUser = { ...currentUser, ...data.user };\n        localStorage.setItem('user', JSON.stringify(updatedUser));\n      }\n      \n      return data.user;\n    } catch (error) {\n      console.error('Profile update error:', error);\n      toast.error(error instanceof Error ? error.message : 'Profile update failed');\n      throw error;\n    }\n  },\n\n  /**\n   * Change user password\n   */\n  changePassword: async (currentPassword: string, newPassword: string): Promise<void> => {\n    try {\n      const token = AuthService.getToken();\n      if (!token) throw new Error('Not authenticated');\n\n      const response = await fetch(API_ENDPOINTS.AUTH.CHANGE_PASSWORD, {\n        method: 'POST',\n        headers: getAuthHeaders(token),\n        body: JSON.stringify({ currentPassword, newPassword }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Password change failed');\n      }\n\n      toast.success('Password changed successfully');\n    } catch (error) {\n      console.error('Password change error:', error);\n      toast.error(error instanceof Error ? error.message : 'Password change failed');\n      throw error;\n    }\n  },\n};\n\nexport default AuthService;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tushar/Downloads/crm_module2/src/contexts/auth-context.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { toast } from 'sonner';\nimport AuthService from '@/services/auth-service';\nimport { User } from '@/services/user-service';\n\ninterface AuthContextType {\n  user: User | null;\n  isLoading: boolean;\n  isAuthenticated: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (userData: any) => Promise<void>;\n  logout: () => void;\n  updateUser: (userData: Partial<User>) => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const router = useRouter();\n\n  // Check if user is authenticated on initial load\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        if (AuthService.isAuthenticated()) {\n          const currentUser = await AuthService.getCurrentUser();\n          setUser(currentUser);\n          \n          // Ensure the cookie is set for middleware authentication\n          const token = AuthService.getToken();\n          if (token) {\n            document.cookie = `auth-token=${token}; path=/; max-age=86400; SameSite=Strict`;\n          }\n        }\n      } catch (error) {\n        console.error('Authentication check failed:', error);\n        // Clear any invalid auth state\n        AuthService.logout();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = async (email: string, password: string) => {\n    setIsLoading(true);\n    try {\n      const userData = await AuthService.login({ email, password });\n      setUser(userData);\n      toast.success('Login successful');\n      \n      // Add a small delay to ensure the cookie is set before redirecting\n      setTimeout(() => {\n        router.push('/dashboard');\n      }, 100);\n    } catch (error) {\n      console.error('Login failed:', error);\n      // Don't show toast here as AuthService already shows it\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Register function\n  const register = async (userData: any) => {\n    setIsLoading(true);\n    try {\n      console.log('Auth context register function called with:', userData);\n      await AuthService.register(userData);\n      toast.success('Registration successful. Please log in.');\n      router.push('/auth/login');\n    } catch (error) {\n      console.error('Registration failed:', error);\n      // Let the component handle the error display\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    AuthService.logout();\n    setUser(null);\n    toast.success('Logged out successfully');\n    router.push('/auth/login');\n  };\n\n  // Update user data\n  const updateUser = (userData: Partial<User>) => {\n    if (user) {\n      setUser({ ...user, ...userData });\n    }\n  };\n\n  const value = {\n    user,\n    isLoading,\n    isAuthenticated: !!user,\n    login,\n    register,\n    logout,\n    updateUser,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAkBA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,eAAwD,CAAC,EAAE,QAAQ,EAAE;IAChF,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IACpD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,iDAAiD;IACjD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,IAAI,kIAAA,CAAA,UAAW,CAAC,eAAe,IAAI;oBACjC,MAAM,cAAc,MAAM,kIAAA,CAAA,UAAW,CAAC,cAAc;oBACpD,QAAQ;oBAER,yDAAyD;oBACzD,MAAM,QAAQ,kIAAA,CAAA,UAAW,CAAC,QAAQ;oBAClC,IAAI,OAAO;wBACT,SAAS,MAAM,GAAG,CAAC,WAAW,EAAE,MAAM,wCAAwC,CAAC;oBACjF;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,gCAAgC;gBAC9C,+BAA+B;gBAC/B,kIAAA,CAAA,UAAW,CAAC,MAAM;YACpB,SAAU;gBACR,aAAa;YACf;QACF;QAEA;IACF,GAAG,EAAE;IAEL,iBAAiB;IACjB,MAAM,QAAQ,OAAO,OAAe;QAClC,aAAa;QACb,IAAI;YACF,MAAM,WAAW,MAAM,kIAAA,CAAA,UAAW,CAAC,KAAK,CAAC;gBAAE;gBAAO;YAAS;YAC3D,QAAQ;YACR,wIAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YAEd,mEAAmE;YACnE,WAAW;gBACT,OAAO,IAAI,CAAC;YACd,GAAG;QACL,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,wDAAwD;YACxD,MAAM;QACR,SAAU;YACR,aAAa;QACf;IACF;IAEA,oBAAoB;IACpB,MAAM,WAAW,OAAO;QACtB,aAAa;QACb,IAAI;YACF,QAAQ,GAAG,CAAC,+CAA+C;YAC3D,MAAM,kIAAA,CAAA,UAAW,CAAC,QAAQ,CAAC;YAC3B,wIAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YACd,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,6CAA6C;YAC7C,MAAM;QACR,SAAU;YACR,aAAa;QACf;IACF;IAEA,kBAAkB;IAClB,MAAM,SAAS;QACb,kIAAA,CAAA,UAAW,CAAC,MAAM;QAClB,QAAQ;QACR,wIAAA,CAAA,QAAK,CAAC,OAAO,CAAC;QACd,OAAO,IAAI,CAAC;IACd;IAEA,mBAAmB;IACnB,MAAM,aAAa,CAAC;QAClB,IAAI,MAAM;YACR,QAAQ;gBAAE,GAAG,IAAI;gBAAE,GAAG,QAAQ;YAAC;QACjC;IACF;IAEA,MAAM,QAAQ;QACZ;QACA;QACA,iBAAiB,CAAC,CAAC;QACnB;QACA;QACA;QACA;IACF;IAEA,qBAAO,8OAAC,YAAY,QAAQ;QAAC,OAAO;kBAAQ;;;;;;AAC9C;AAEO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;uCAEe","debugId":null}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tushar/Downloads/crm_module2/src/contexts/theme-context.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\ntype Theme = 'light' | 'dark' | 'system';\n\ninterface ThemeContextType {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [theme, setThemeState] = useState<Theme>('system');\n\n  // Initialize theme from localStorage or system preference\n  useEffect(() => {\n    console.log('Initializing theme...');\n    const storedTheme = localStorage.getItem('theme') as Theme | null;\n    \n    if (storedTheme) {\n      console.log(`Found stored theme: ${storedTheme}`);\n      setThemeState(storedTheme);\n    } else {\n      // Check system preference\n      const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n      console.log(`No stored theme found. System preference: ${systemTheme}`);\n      setThemeState('system');\n      applyTheme(systemTheme);\n    }\n  }, []);\n\n  // Listen for system theme changes\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    \n    const handleChange = () => {\n      if (theme === 'system') {\n        const newTheme = mediaQuery.matches ? 'dark' : 'light';\n        applyTheme(newTheme);\n      }\n    };\n\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, [theme]);\n\n  // Apply theme changes\n  useEffect(() => {\n    console.log(`Theme changed to: ${theme}`);\n    \n    if (theme === 'system') {\n      const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n      console.log(`System theme detected: ${systemTheme}`);\n      applyTheme(systemTheme);\n    } else {\n      applyTheme(theme);\n    }\n    \n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  // Apply the theme to the document\n  const applyTheme = (theme: 'light' | 'dark') => {\n    const root = document.documentElement;\n    \n    // First remove both classes\n    root.classList.remove('light', 'dark');\n    // Then add the appropriate one\n    root.classList.add(theme);\n    \n    // For debugging\n    console.log(`Theme applied: ${theme}`);\n  };\n\n  const setTheme = (newTheme: Theme) => {\n    setThemeState(newTheme);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = (): ThemeContextType => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport default ThemeContext;"],"names":[],"mappings":";;;;;;AAEA;AAFA;;;AAWA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,MAAM,gBAAyD,CAAC,EAAE,QAAQ,EAAE;IACjF,MAAM,CAAC,OAAO,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS;IAE/C,0DAA0D;IAC1D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,QAAQ,GAAG,CAAC;QACZ,MAAM,cAAc,aAAa,OAAO,CAAC;QAEzC,IAAI,aAAa;YACf,QAAQ,GAAG,CAAC,CAAC,oBAAoB,EAAE,aAAa;YAChD,cAAc;QAChB,OAAO;YACL,0BAA0B;YAC1B,MAAM,cAAc,OAAO,UAAU,CAAC,gCAAgC,OAAO,GAAG,SAAS;YACzF,QAAQ,GAAG,CAAC,CAAC,0CAA0C,EAAE,aAAa;YACtE,cAAc;YACd,WAAW;QACb;IACF,GAAG,EAAE;IAEL,kCAAkC;IAClC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa,OAAO,UAAU,CAAC;QAErC,MAAM,eAAe;YACnB,IAAI,UAAU,UAAU;gBACtB,MAAM,WAAW,WAAW,OAAO,GAAG,SAAS;gBAC/C,WAAW;YACb;QACF;QAEA,WAAW,gBAAgB,CAAC,UAAU;QACtC,OAAO,IAAM,WAAW,mBAAmB,CAAC,UAAU;IACxD,GAAG;QAAC;KAAM;IAEV,sBAAsB;IACtB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,QAAQ,GAAG,CAAC,CAAC,kBAAkB,EAAE,OAAO;QAExC,IAAI,UAAU,UAAU;YACtB,MAAM,cAAc,OAAO,UAAU,CAAC,gCAAgC,OAAO,GAAG,SAAS;YACzF,QAAQ,GAAG,CAAC,CAAC,uBAAuB,EAAE,aAAa;YACnD,WAAW;QACb,OAAO;YACL,WAAW;QACb;QAEA,aAAa,OAAO,CAAC,SAAS;IAChC,GAAG;QAAC;KAAM;IAEV,kCAAkC;IAClC,MAAM,aAAa,CAAC;QAClB,MAAM,OAAO,SAAS,eAAe;QAErC,4BAA4B;QAC5B,KAAK,SAAS,CAAC,MAAM,CAAC,SAAS;QAC/B,+BAA+B;QAC/B,KAAK,SAAS,CAAC,GAAG,CAAC;QAEnB,gBAAgB;QAChB,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,OAAO;IACvC;IAEA,MAAM,WAAW,CAAC;QAChB,cAAc;IAChB;IAEA,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAO;QAAS;kBAC7C;;;;;;AAGP;AAEO,MAAM,WAAW;IACtB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;uCAEe","debugId":null}}]
}