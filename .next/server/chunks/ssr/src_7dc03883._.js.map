{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tushar/OneDrive/Desktop/crm_module/client/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tushar/OneDrive/Desktop/crm_module/client/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tushar/OneDrive/Desktop/crm_module/client/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction AlertDialog({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Root>) {\n  return <AlertDialogPrimitive.Root data-slot=\"alert-dialog\" {...props} />\n}\n\nfunction AlertDialogTrigger({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Trigger>) {\n  return <AlertDialogPrimitive.Trigger data-slot=\"alert-dialog-trigger\" {...props} />\n}\n\nfunction AlertDialogPortal({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Portal>) {\n  return <AlertDialogPrimitive.Portal data-slot=\"alert-dialog-portal\" {...props} />\n}\n\nfunction AlertDialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Overlay>) {\n  return (\n    <AlertDialogPrimitive.Overlay\n      data-slot=\"alert-dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Content>) {\n  return (\n    <AlertDialogPortal data-slot=\"alert-dialog-portal\">\n      <AlertDialogOverlay />\n      <AlertDialogPrimitive.Content\n        data-slot=\"alert-dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </AlertDialogPrimitive.Content>\n    </AlertDialogPortal>\n  )\n}\n\nfunction AlertDialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Title>) {\n  return (\n    <AlertDialogPrimitive.Title\n      data-slot=\"alert-dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Description>) {\n  return (\n    <AlertDialogPrimitive.Description\n      data-slot=\"alert-dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogAction({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Action>) {\n  return (\n    <AlertDialogPrimitive.Action\n      data-slot=\"alert-dialog-action\"\n      className={cn(\n        \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogCancel({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Cancel>) {\n  return (\n    <AlertDialogPrimitive.Cancel\n      data-slot=\"alert-dialog-cancel\"\n      className={cn(\n        \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2 mt-2 sm:mt-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogOverlay,\n  AlertDialogPortal,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n}"],"names":[],"mappings":";;;;;;;;;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,YAAY,EACnB,GAAG,OACoD;IACvD,qBAAO,8OAAC,2KAAA,CAAA,OAAyB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,mBAAmB,EAC1B,GAAG,OACuD;IAC1D,qBAAO,8OAAC,2KAAA,CAAA,UAA4B;QAAC,aAAU;QAAwB,GAAG,KAAK;;;;;;AACjF;AAEA,SAAS,kBAAkB,EACzB,GAAG,OACsD;IACzD,qBAAO,8OAAC,2KAAA,CAAA,SAA2B;QAAC,aAAU;QAAuB,GAAG,KAAK;;;;;;AAC/E;AAEA,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OACuD;IAC1D,qBACE,8OAAC,2KAAA,CAAA,UAA4B;QAC3B,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,mBAAmB,EAC1B,SAAS,EACT,QAAQ,EACR,GAAG,OACuD;IAC1D,qBACE,8OAAC;QAAkB,aAAU;;0BAC3B,8OAAC;;;;;0BACD,8OAAC,2KAAA,CAAA,UAA4B;gBAC3B,aAAU;gBACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;0BAER;;;;;;;;;;;;AAIT;AAEA,SAAS,kBAAkB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC7E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC7E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACqD;IACxD,qBACE,8OAAC,2KAAA,CAAA,QAA0B;QACzB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,8OAAC,2KAAA,CAAA,cAAgC;QAC/B,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,2KAAA,CAAA,SAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,2KAAA,CAAA,SAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qYACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tushar/OneDrive/Desktop/crm_module/client/src/services/lead-service.ts"],"sourcesContent":["import { toast } from 'sonner';\nimport AuthService from './auth-service';\n\n// Types for leads\nexport interface Lead {\n  _id: string;\n  name: string;\n  email: string;\n  phone: string;\n  company?: string;\n  contactName?: string;\n  source: string;\n  status: string;\n  requirements?: string;\n  assignedTo?: string;\n  notes?: string;\n  createdAt: string;\n  updatedAt?: string;\n}\n\nexport interface LeadFormData {\n  name: string;\n  email: string;\n  phone: string;\n  source: string;\n  company?: string;\n  contactName?: string;\n  status?: string;\n  requirements?: string;\n  assignedTo?: string;\n  notes?: string;\n}\n\nexport interface LeadFilters {\n  status?: string;\n  source?: string;\n  assignedTo?: string;\n  dateRange?: {\n    from: string;\n    to: string;\n  };\n  searchTerm?: string;\n  page?: number;\n  limit?: number;\n}\n\nexport interface LeadsResponse {\n  data: Lead[];\n  pagination: {\n    total: number;\n    page: number;\n    limit: number;\n    pages: number;\n  };\n}\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000/api';\n\n/**\n * Service for handling lead-related API calls\n */\nexport const LeadService = {\n  /**\n   * Get all leads with optional filtering\n   */\n  getLeads: async (filters?: LeadFilters): Promise<LeadsResponse> => {\n    try {\n      const token = AuthService.getToken();\n      if (!token) throw new Error('Not authenticated');\n  \n      // Build query string from filters\n      let queryString = '';\n      if (filters) {\n        const params = new URLSearchParams();\n        if (filters.status) params.append('status', filters.status);\n        if (filters.source) params.append('source', filters.source);\n        if (filters.assignedTo) params.append('assignedTo', filters.assignedTo);\n        if (filters.searchTerm) params.append('search', filters.searchTerm);\n        if (filters.page) params.append('page', filters.page.toString());\n        if (filters.limit) params.append('limit', filters.limit.toString());\n        if (filters.dateRange) {\n          params.append('fromDate', filters.dateRange.from);\n          params.append('toDate', filters.dateRange.to);\n        }\n        queryString = `?${params.toString()}`;\n      }\n  \n      // Always use the real backend API\n      const apiUrl = `${API_URL}/leads${queryString}`;\n  \n      const response = await fetch(apiUrl, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n      });\n  \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to fetch leads');\n      }\n  \n      const data = await response.json();\n      \n      // Format the response to match the LeadsResponse interface\n      return {\n        data: data || [],\n        pagination: data.pagination || {\n          total: data?.length || 0,\n          page: filters?.page || 1,\n          limit: filters?.limit || 10,\n          pages: Math.ceil((data?.length || 0) / (filters?.limit || 10))\n        }\n      };\n    } catch (error) {\n      console.error('Error fetching leads:', error);\n      toast.error(error instanceof Error ? error.message : 'Failed to fetch leads');\n      throw error;\n    }\n  },\n\n  /**\n   * Get a single lead by ID\n   */\n  getLead: async (id: string): Promise<Lead> => {\n    try {\n      const token = AuthService.getToken();\n      if (!token) throw new Error('Not authenticated');\n\n      const response = await fetch(`${API_URL}/leads/${id}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to fetch lead');\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching lead:', error);\n      toast.error(error instanceof Error ? error.message : 'Failed to fetch lead');\n      throw error;\n    }\n  },\n\n  /**\n   * Create a new lead\n   */\n  createLead: async (leadData: LeadFormData): Promise<Lead> => {\n    try {\n      const token = AuthService.getToken();\n      if (!token) throw new Error('Not authenticated');\n\n      // Prepare the data according to backend schema\n      const backendLeadData = {\n        name: leadData.name,\n        email: leadData.email,\n        phone: leadData.phone,\n        company: leadData.company || '',\n        contactName: leadData.contactName || '',\n        source: leadData.source,\n        status: leadData.status || 'new',\n        requirements: leadData.requirements || '',\n        assignedTo: leadData.assignedTo || '',\n        notes: leadData.notes || ''\n      };\n\n      const response = await fetch(`${API_URL}/leads`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify(backendLeadData),\n      });\n\n      if (!response.ok) {\n        try {\n          const errorData = await response.json();\n          throw new Error(errorData.message || 'Failed to create lead');\n        } catch (jsonError) {\n          // If the response is not valid JSON\n          throw new Error(`Failed to create lead: ${response.statusText}`);\n        }\n      }\n\n      const data = await response.json();\n      toast.success('Lead created successfully');\n      return data;\n    } catch (error) {\n      console.error('Error creating lead:', error);\n      toast.error(error instanceof Error ? error.message : 'Failed to create lead');\n      throw error;\n    }\n  },\n\n  /**\n   * Update an existing lead\n   */\n  updateLead: async (id: string, leadData: Partial<LeadFormData>): Promise<Lead> => {\n    try {\n      const token = AuthService.getToken();\n      if (!token) throw new Error('Not authenticated');\n\n      // Prepare the data according to backend schema\n      const backendLeadData: any = {};\n      \n      if (leadData.name) backendLeadData.name = leadData.name;\n      if (leadData.email) backendLeadData.email = leadData.email;\n      if (leadData.phone) backendLeadData.phone = leadData.phone;\n      if (leadData.source) backendLeadData.source = leadData.source;\n      if (leadData.status) backendLeadData.status = leadData.status;\n      if (leadData.company) backendLeadData.company = leadData.company;\n      if (leadData.contactName) backendLeadData.contactName = leadData.contactName;\n      if (leadData.requirements) backendLeadData.requirements = leadData.requirements;\n      if (leadData.assignedTo) backendLeadData.assignedTo = leadData.assignedTo;\n      if (leadData.notes) backendLeadData.notes = leadData.notes;\n\n      const response = await fetch(`${API_URL}/leads/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify(backendLeadData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to update lead');\n      }\n\n      const data = await response.json();\n      toast.success('Lead updated successfully');\n      return data;\n    } catch (error) {\n      console.error('Error updating lead:', error);\n      toast.error(error instanceof Error ? error.message : 'Failed to update lead');\n      throw error;\n    }\n  },\n\n  /**\n   * Delete a lead\n   */\n  deleteLead: async (id: string): Promise<void> => {\n    try {\n      const token = AuthService.getToken();\n      if (!token) throw new Error('Not authenticated');\n\n      console.log(`Attempting to delete lead with ID: ${id}`);\n      console.log(`Using API URL: ${API_URL}/leads/${id}`);\n      \n      const response = await fetch(`${API_URL}/leads/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n      });\n\n      console.log(`Delete response status: ${response.status} ${response.statusText}`);\n      console.log(`Response headers:`, response.headers);\n\n      if (!response.ok) {\n        // Check if the response is JSON before trying to parse it\n        const contentType = response.headers.get('content-type');\n        console.log(`Response content type: ${contentType}`);\n        \n        if (contentType && contentType.includes('application/json')) {\n          const errorData = await response.json();\n          console.error('Error data from server:', errorData);\n          throw new Error(errorData.message || 'Failed to delete lead');\n        } else {\n          // Handle non-JSON response\n          const text = await response.text();\n          console.error('Non-JSON error response:', text);\n          throw new Error(`Failed to delete lead: ${response.status} ${response.statusText}`);\n        }\n      }\n\n      toast.success('Lead deleted successfully');\n    } catch (error) {\n      console.error('Full error object:', error);\n      console.error('Error deleting lead:', error);\n      toast.error(error instanceof Error ? error.message : 'Failed to delete lead');\n      throw error;\n    }\n  },\n\n  /**\n   * Change the status of a lead\n   */\n  changeLeadStatus: async (id: string, status: string): Promise<Lead> => {\n    try {\n      const token = AuthService.getToken();\n      if (!token) throw new Error('Not authenticated');\n\n      const response = await fetch(`${API_URL}/leads/${id}/status`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify({ status }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to update lead status');\n      }\n\n      const data = await response.json();\n      toast.success(`Lead status updated to ${status}`);\n      return data.lead;\n    } catch (error) {\n      console.error(`Error updating lead status ${id}:`, error);\n      toast.error(error instanceof Error ? error.message : 'Failed to update lead status');\n      throw error;\n    }\n  },\n\n  /**\n   * Assign a lead to a user\n   */\n  assignLead: async (id: string, userId: string): Promise<Lead> => {\n    try {\n      const token = AuthService.getToken();\n      if (!token) throw new Error('Not authenticated');\n\n      const response = await fetch(`${API_URL}/leads/${id}/assign`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify({ assignedTo: userId }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to assign lead');\n      }\n\n      const data = await response.json();\n      toast.success('Lead assigned successfully');\n      return data.lead;\n    } catch (error) {\n      console.error(`Error assigning lead ${id}:`, error);\n      toast.error(error instanceof Error ? error.message : 'Failed to assign lead');\n      throw error;\n    }\n  },\n\n  /**\n   * Get lead statistics\n   */\n  getLeadStats: async (): Promise<{ \n    total: number; \n    byStatus: Record<string, number>;\n    bySource: Record<string, number>;\n  }> => {\n    try {\n      const token = AuthService.getToken();\n      if (!token) throw new Error('Not authenticated');\n\n      const response = await fetch(`${API_URL}/leads/stats`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to fetch lead statistics');\n      }\n\n      const data = await response.json();\n      return data.stats;\n    } catch (error) {\n      console.error('Error fetching lead statistics:', error);\n      toast.error(error instanceof Error ? error.message : 'Failed to fetch lead statistics');\n      throw error;\n    }\n  },\n};\n\nexport default LeadService;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 611, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tushar/OneDrive/Desktop/crm_module/client/src/app/dashboard/leads/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useParams, useRouter, usePathname, useSearchParams } from 'next/navigation';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { toast } from 'sonner';\nimport { ArrowLeft, Edit, Loader2, Trash2, RefreshCw } from 'lucide-react';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from '@/components/ui/alert-dialog';\nimport LeadService, { Lead as ServiceLead } from '@/services/lead-service';\n\n// Define interface for our Lead data type that matches the API response\ninterface Lead {\n  id: string;\n  name: string;\n  email: string;\n  phone: string;\n  company?: string;\n  contactName?: string;\n  source: string;\n  status: string;\n  requirements?: string;\n  notes?: string;\n  assignedTo?: string;\n  createdAt: string;\n  updatedAt?: string;\n}\n\nexport default function LeadDetailsPage() {\n  const params = useParams();\n  const router = useRouter();\n  const pathname = usePathname();\n  const searchParams = useSearchParams();\n  const [lead, setLead] = useState<Lead | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [deleteLoading, setDeleteLoading] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  \n  // Initial data fetch\n  useEffect(() => {\n    if (params.id) {\n      fetchLead();\n    }\n  }, [params.id]);\n  \n  // Refresh data when returning to this page\n  useEffect(() => {\n    // Add event listener for focus to refresh data when returning to this page\n    const handleFocus = () => {\n      if (params.id) {\n        console.log('Window focused, refreshing lead data');\n        fetchLead();\n      }\n    };\n    \n    window.addEventListener('focus', handleFocus);\n    \n    // Clean up event listener\n    return () => {\n      window.removeEventListener('focus', handleFocus);\n    };\n  }, []);\n  \n  // Refresh data when pathname changes (e.g., returning from edit page)\n  useEffect(() => {\n    if (pathname && pathname.endsWith(`/leads/${params.id}`)) {\n      console.log('Pathname changed, refreshing lead data');\n      fetchLead();\n    }\n  }, [pathname]);\n  \n  // Refresh data when URL query parameters change (e.g., ?updated=timestamp)\n  useEffect(() => {\n    const updated = searchParams.get('updated');\n    if (updated) {\n      console.log('URL has updated parameter, refreshing lead data');\n      fetchLead();\n    }\n  }, [searchParams]);\n  \n  // Check localStorage and sessionStorage for lead updates\n  useEffect(() => {\n    const checkForUpdates = () => {\n      if (typeof window !== 'undefined') {\n        // Check localStorage first\n        const updatedLeadId = window.localStorage.getItem('leadUpdated');\n        if (updatedLeadId === params.id) {\n          console.log('Lead was updated (localStorage), refreshing data');\n          fetchLead();\n          // Clear the flag after processing\n          window.localStorage.removeItem('leadUpdated');\n        }\n        \n        // Also check sessionStorage as a backup\n        const sessionUpdatedLeadId = window.sessionStorage.getItem('leadUpdated');\n        const updateTime = window.sessionStorage.getItem('leadUpdatedTime');\n        \n        // Only refresh if the update is recent (within last 10 seconds)\n        const isRecent = updateTime && (Date.now() - parseInt(updateTime)) < 10000;\n        \n        if (sessionUpdatedLeadId === params.id && isRecent) {\n          console.log('Lead was updated (sessionStorage), refreshing data');\n          fetchLead();\n          // Clear the flags after processing\n          window.sessionStorage.removeItem('leadUpdated');\n          window.sessionStorage.removeItem('leadUpdatedTime');\n        }\n      }\n    };\n    \n    // Check immediately when component mounts\n    checkForUpdates();\n    \n    // Also set up an interval to check periodically\n    const interval = setInterval(checkForUpdates, 1000);\n    \n    return () => {\n      clearInterval(interval);\n    };\n  }, [params.id]);\n  \n  const fetchLead = async () => {\n    setLoading(true);\n    try {\n      // Ensure we're using the correct ID from params and clean it\n      const id = typeof params.id === 'string' ? params.id.trim() : '';\n      console.log('Fetching lead with ID:', id);\n      \n      // Try to fetch from the real API first using LeadService\n      try {\n        const data = await LeadService.getLead(id);\n        console.log('Lead data from service:', data);\n        \n        // Convert the service lead format to our local Lead format if needed\n        const formattedLead: Lead = {\n          id: data._id || data.id,\n          name: data.name,\n          email: data.email,\n          phone: data.phone,\n          source: data.source,\n          status: data.status,\n          requirements: data.requirements,\n          assignedTo: data.assignedTo,\n          createdAt: data.createdAt,\n          updatedAt: data.updatedAt,\n          // Map other fields as needed\n          contactName: data.contactName,\n          notes: data.notes\n        };\n        \n        setLead(formattedLead);\n        return;\n      } catch (serviceError) {\n        console.warn('Failed to fetch from service API, falling back to mock API:', serviceError);\n        // Fall back to the mock API\n      }\n      \n      // Fallback to mock API\n      const response = await fetch(`/api/leads/${id}`);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to fetch lead');\n      }\n      \n      const data = await response.json();\n      console.log('Lead data from mock API:', data);\n      setLead(data);\n    } catch (error) {\n      console.error('Error fetching lead:', error);\n      toast.error(error instanceof Error ? error.message : 'Failed to load lead details');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handleRefresh = async () => {\n    setRefreshing(true);\n    await fetchLead();\n    setRefreshing(false);\n    toast.success('Lead data refreshed');\n  };\n\n  const handleDeleteLead = async () => {\n    setDeleteLoading(true);\n    try {\n      // Ensure we're using the correct ID from params and clean it\n      const id = typeof params.id === 'string' ? params.id.trim() : '';\n      console.log('Deleting lead with ID:', id);\n      \n      // Try to delete using the real API first\n      try {\n        await LeadService.deleteLead(id);\n        toast.success('Lead deleted successfully');\n        router.push('/dashboard/leads');\n        return;\n      } catch (serviceError) {\n        console.warn('Failed to delete from service API, falling back to mock API:', serviceError);\n        // Fall back to the mock API\n      }\n      \n      // Fallback to mock API\n      const response = await fetch(`/api/leads/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to delete lead');\n      }\n      \n      const result = await response.json();\n      toast.success(result.message || 'Lead deleted successfully');\n      router.push('/dashboard/leads');\n    } catch (error) {\n      console.error('Error deleting lead:', error);\n      toast.error(error instanceof Error ? error.message : 'Failed to delete lead');\n    } finally {\n      setDeleteLoading(false);\n    }\n  };\n\n  const formatStatus = (status: string | undefined) => {\n    if (!status) return 'Unknown';\n    return status\n      .split('_')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  };\n\n  const formatSource = (source: string | undefined) => {\n    if (!source) return 'Unknown';\n    return source\n      .split('_')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  };\n\n  const getStatusColor = (status: string | undefined) => {\n    if (!status) return 'bg-gray-100 text-gray-800';\n    switch (status) {\n      case 'new':\n        return 'bg-blue-100 text-blue-800';\n      case 'contacted':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'qualified':\n        return 'bg-green-100 text-green-800';\n      case 'unqualified':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex h-[calc(100vh-200px)] items-center justify-center\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n        <span className=\"ml-2 text-lg\">Loading lead details...</span>\n      </div>\n    );\n  }\n\n  if (!lead) {\n    return (\n      <div className=\"flex h-[calc(100vh-200px)] flex-col items-center justify-center\">\n        <p className=\"text-lg text-muted-foreground\">Lead not found</p>\n        <Button\n          variant=\"outline\"\n          className=\"mt-4\"\n          onClick={() => router.push('/dashboard/leads')}\n        >\n          <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back to Leads\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex-1 space-y-6 p-4 md:p-8 pt-6\">\n      <div className=\"flex items-center justify-between mb-8\">\n        <div className=\"flex items-center space-x-3\">\n          <Button variant=\"outline\" size=\"icon\" onClick={() => router.back()} className=\"h-10 w-10 rounded-full border-border/50 shadow-md hover:bg-primary/10 hover:text-primary transition-all\">\n            <ArrowLeft className=\"h-4 w-4\" />\n          </Button>\n          <h2 className=\"text-3xl font-bold tracking-tight bg-gradient-to-r from-primary to-primary/70 bg-clip-text text-transparent\">Lead Details</h2>\n          <Badge className={getStatusColor(lead.status)}>\n            {formatStatus(lead.status)}\n          </Badge>\n        </div>\n        <div className=\"flex space-x-3\">\n          <Button\n            variant=\"outline\"\n            onClick={handleRefresh}\n            disabled={refreshing}\n            className=\"rounded-full border-border/50 shadow-md hover:bg-primary/10 hover:text-primary transition-all\"\n          >\n            <RefreshCw className={`mr-2 h-4 w-4 ${refreshing ? 'animate-spin' : ''}`} />\n            {refreshing ? 'Refreshing...' : 'Refresh'}\n          </Button>\n          <Button\n            variant=\"outline\"\n            onClick={() => router.push(`/dashboard/leads/${lead.id}/edit`)}\n            className=\"rounded-full border-border/50 shadow-md hover:bg-primary/10 hover:text-primary transition-all\"\n          >\n            <Edit className=\"mr-2 h-4 w-4\" /> Edit Lead\n          </Button>\n          <Button\n            variant=\"default\"\n            onClick={() => router.push(`/dashboard/leads/${lead.id}/convert`)}\n            className=\"rounded-full shadow-md hover:shadow-lg transition-all bg-green-600 hover:bg-green-700 text-white\"\n          >\n            Convert to Opportunity\n          </Button>\n          <AlertDialog>\n            <AlertDialogTrigger asChild>\n              <Button variant=\"destructive\" className=\"rounded-full shadow-md hover:shadow-lg transition-all\">\n                <Trash2 className=\"mr-2 h-4 w-4\" /> Delete Lead\n              </Button>\n            </AlertDialogTrigger>\n            <AlertDialogContent className=\"border-none shadow-lg\">\n              <AlertDialogHeader>\n                <AlertDialogTitle className=\"text-xl font-bold text-primary/90\">Are you absolutely sure?</AlertDialogTitle>\n                <AlertDialogDescription className=\"text-muted-foreground mt-2\">\n                  This action cannot be undone. This will permanently delete the lead\n                  and remove the data from our servers.\n                </AlertDialogDescription>\n              </AlertDialogHeader>\n              <AlertDialogFooter className=\"mt-6\">\n                <AlertDialogCancel className=\"rounded-full border-border/50 shadow-md hover:bg-muted/50 transition-all\">Cancel</AlertDialogCancel>\n                <AlertDialogAction\n                  onClick={handleDeleteLead}\n                  disabled={deleteLoading}\n                  className=\"bg-destructive text-destructive-foreground hover:bg-destructive/90 rounded-full shadow-md hover:shadow-lg transition-all\"\n                >\n                  {deleteLoading ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      Deleting...\n                    </>\n                  ) : (\n                    'Delete'\n                  )}\n                </AlertDialogAction>\n              </AlertDialogFooter>\n            </AlertDialogContent>\n          </AlertDialog>\n        </div>\n      </div>\n\n      <div className=\"grid gap-4 md:grid-cols-2\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Lead Information</CardTitle>\n            <CardDescription>\n              Basic information about the lead.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div>\n              <h3 className=\"text-sm font-medium text-muted-foreground\">Name</h3>\n              <p className=\"text-base\">{lead.name}</p>\n            </div>\n            <div>\n              <h3 className=\"text-sm font-medium text-muted-foreground\">Email</h3>\n              <p className=\"text-base\">{lead.email}</p>\n            </div>\n            <div>\n              <h3 className=\"text-sm font-medium text-muted-foreground\">Phone</h3>\n              <p className=\"text-base\">{lead.phone}</p>\n            </div>\n            {lead.company && (\n              <div>\n                <h3 className=\"text-sm font-medium text-muted-foreground\">Company</h3>\n                <p className=\"text-base\">{lead.company}</p>\n              </div>\n            )}\n            {lead.contactName && (\n              <div>\n                <h3 className=\"text-sm font-medium text-muted-foreground\">Contact Person</h3>\n                <p className=\"text-base\">{lead.contactName}</p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Additional Details</CardTitle>\n            <CardDescription>\n              More information about the lead.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div>\n              <h3 className=\"text-sm font-medium text-muted-foreground\">Status</h3>\n              <Badge className={`mt-1 ${getStatusColor(lead.status)}`}>\n                {formatStatus(lead.status)}\n              </Badge>\n            </div>\n            <div>\n              <h3 className=\"text-sm font-medium text-muted-foreground\">Source</h3>\n              <p className=\"text-base\">{formatSource(lead.source)}</p>\n            </div>\n            {lead.requirements && (\n              <div>\n                <h3 className=\"text-sm font-medium text-muted-foreground\">Requirements</h3>\n                <p className=\"text-base\">{lead.requirements}</p>\n              </div>\n            )}\n            {lead.assignedTo && (\n              <div>\n                <h3 className=\"text-sm font-medium text-muted-foreground\">Assigned To</h3>\n                <p className=\"text-base\">{lead.assignedTo}</p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid gap-4 md:grid-cols-2\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Timeline</CardTitle>\n            <CardDescription>\n              History of interactions with this lead.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-start\">\n                <div className=\"mr-4 mt-1 flex h-8 w-8 items-center justify-center rounded-full bg-primary/10\">\n                  <span className=\"text-xs font-medium text-primary\">1</span>\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium\">Lead Created</p>\n                  <p className=\"text-sm text-muted-foreground\">\n                    {formatDate(lead.createdAt)}\n                  </p>\n                </div>\n              </div>\n              {lead.updatedAt && lead.updatedAt !== lead.createdAt && (\n                <div className=\"flex items-start\">\n                  <div className=\"mr-4 mt-1 flex h-8 w-8 items-center justify-center rounded-full bg-primary/10\">\n                    <span className=\"text-xs font-medium text-primary\">2</span>\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-medium\">Lead Updated</p>\n                    <p className=\"text-sm text-muted-foreground\">\n                      {formatDate(lead.updatedAt)}\n                    </p>\n                  </div>\n                </div>\n              )}\n            </div>\n          </CardContent>\n          <CardFooter>\n            <p className=\"text-sm text-muted-foreground\">\n              This timeline shows the history of interactions with this lead.\n            </p>\n          </CardFooter>\n        </Card>\n        \n        <Card>\n          <CardHeader>\n            <CardTitle>Notes</CardTitle>\n            <CardDescription>\n              Additional notes and information about this lead.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"rounded-md bg-muted p-4\">\n              {lead.notes ? (\n                <p className=\"text-sm whitespace-pre-wrap\">{lead.notes}</p>\n              ) : (\n                <p className=\"text-sm text-muted-foreground italic\">No notes available for this lead.</p>\n              )}\n            </div>\n          </CardContent>\n          <CardFooter>\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              onClick={() => router.push(`/dashboard/leads/${lead.id}/edit?focus=notes`)}\n              className=\"text-xs\"\n            >\n              Add/Edit Notes\n            </Button>\n          </CardFooter>\n        </Card>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}